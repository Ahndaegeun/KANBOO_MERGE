{"remainingRequest":"C:\\Users\\PC\\Desktop\\LCK\\FinalProject\\Vue\\kanboo_team\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\PC\\Desktop\\LCK\\FinalProject\\Vue\\kanboo_team\\src\\components\\component\\noAccess\\home\\Terminal.vue?vue&type=template&id=0bfc99b8&scoped=true","dependencies":[{"path":"C:\\Users\\PC\\Desktop\\LCK\\FinalProject\\Vue\\kanboo_team\\src\\components\\component\\noAccess\\home\\Terminal.vue","mtime":1639124599289},{"path":"C:\\Users\\PC\\Desktop\\LCK\\FinalProject\\Vue\\kanboo_team\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639124563165},{"path":"C:\\Users\\PC\\Desktop\\LCK\\FinalProject\\Vue\\kanboo_team\\node_modules\\babel-loader\\lib\\index.js","mtime":1639124562553},{"path":"C:\\Users\\PC\\Desktop\\LCK\\FinalProject\\Vue\\kanboo_team\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1639124597285},{"path":"C:\\Users\\PC\\Desktop\\LCK\\FinalProject\\Vue\\kanboo_team\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639124563165},{"path":"C:\\Users\\PC\\Desktop\\LCK\\FinalProject\\Vue\\kanboo_team\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1639124597265}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogIDxkaXYgY2xhc3M9InRlcm1pbmFsLWNvbnRhaW5lciIgQGNsaWNrPSJmb2N1cygpIj4NCiAgICA8ZGl2IGNsYXNzPSJjb25zb2xlIj4NCiAgICAgIDxkaXYgY2xhc3M9Im91dHB1dC10ZXh0IiB2LWZvcj0iKGksIGopIGluIGNvbnNvbGVUZXh0Lmxlbmd0aCIgOmtleT0iaiI+DQogICAgICAgIDxzcGFuIGNsYXNzPSJjb25zb2xlLXRleHQiPnt7IGNvbnNvbGVUZXh0W2kgLSAxXSB9fTwvc3Bhbj4NCiAgICAgICAgPHNwYW4gY2xhc3M9ImNvbnNvbGUtdGV4dCI+e3sgbW9kZVRleHRbaSAtIDFdIH19PC9zcGFuPg0KICAgICAgICA8c3BhbiA6Y2xhc3M9ImNsYXNzRGF0YVtpIC0gMV0iIDppZD0iYHRleHQtJHtpIC0gMX1gIiBjbGFzcz0idXNlci10ZXh0Ij4NCiAgICAgICAgICB7eyBlbnRlclRleHRbaSAtIDFdIH19PC9zcGFuDQogICAgICAgID4NCiAgICAgICAgPHNwYW4gY2xhc3M9ImNvcHkiIHYtaWY9InByaW50VG9rZW4gJiYgaiA9PT0gdG9rZW5QcmludEluZGV4IiBAY2xpY2s9ImNvcHlUb2tlbiI+IFtjb3B5XTwvc3Bhbj4NCiAgICAgIDwvZGl2Pg0KICAgICAgPGRpdiBjbGFzcz0idXNlcklucHV0Ij4NCiAgICAgICAge3sgcm9vdFRleHQgfX0NCiAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiB3aGl0ZSIgdi1pZj0iaW5wdXREYXRhLmxlbmd0aCA9PSA2Ij4gKzgyKSA8L3NwYW4+DQogICAgICAgIDxpbnB1dA0KICAgICAgICAgIDp0eXBlPSJpbnB1dFR5cGUiDQogICAgICAgICAgQGtleXVwLmVudGVyPSJlbnRlciINCiAgICAgICAgICBpZD0iaW5wdXRCb3giDQogICAgICAgICAgdi1tb2RlbD0iaW5wdXRUZXh0Ig0KICAgICAgICAgIDpjbGFzcz0iew0KICAgICAgICAgICAgJ3RleHQtY29sb3ItcmVkJzogc2lnblJlZywNCiAgICAgICAgICAgICd0ZXh0LWNvbG9yLW9yYW5nZSc6IHJlc2VydmVkV29yZCwNCiAgICAgICAgICB9Ig0KICAgICAgICAvPg0KICAgICAgICA8c3BhbiB2LWlmPSJpZENoZWNrIj4gSUQgYWxyZWFkeSByZWdpc3RlcmVkIDwvc3Bhbj4NCiAgICAgIDwvZGl2Pg0KICAgIDwvZGl2Pg0KICA8L2Rpdj4NCg=="},{"version":3,"sources":["C:\\Users\\PC\\Desktop\\LCK\\FinalProject\\Vue\\kanboo_team\\src\\components\\component\\noAccess\\home\\Terminal.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAClB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzD,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACrE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7B;QACA,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAChG,CAAC,CAAC,CAAC,CAAC,CAAC;MACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACb,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC,CAAC,CAAC;UACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACnC,CAAC;QACH,CAAC;QACD,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACpD,CAAC,CAAC,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC,CAAC,CAAC;EACP,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Users/PC/Desktop/LCK/FinalProject/Vue/kanboo_team/src/components/component/noAccess/home/Terminal.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div class=\"terminal-container\" @click=\"focus()\">\r\n    <div class=\"console\">\r\n      <div class=\"output-text\" v-for=\"(i, j) in consoleText.length\" :key=\"j\">\r\n        <span class=\"console-text\">{{ consoleText[i - 1] }}</span>\r\n        <span class=\"console-text\">{{ modeText[i - 1] }}</span>\r\n        <span :class=\"classData[i - 1]\" :id=\"`text-${i - 1}`\" class=\"user-text\">\r\n          {{ enterText[i - 1] }}</span\r\n        >\r\n        <span class=\"copy\" v-if=\"printToken && j === tokenPrintIndex\" @click=\"copyToken\"> [copy]</span>\r\n      </div>\r\n      <div class=\"userInput\">\r\n        {{ rootText }}\r\n        <span style=\"color: white\" v-if=\"inputData.length == 6\"> +82) </span>\r\n        <input\r\n          :type=\"inputType\"\r\n          @keyup.enter=\"enter\"\r\n          id=\"inputBox\"\r\n          v-model=\"inputText\"\r\n          :class=\"{\r\n            'text-color-red': signReg,\r\n            'text-color-orange': reservedWord,\r\n          }\"\r\n        />\r\n        <span v-if=\"idCheck\"> ID already registered </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapMutations, mapState } from \"vuex\";\r\nimport signHelp from \"@/assets/signHelp.js\";\r\n\r\nexport default {\r\n  name: \"Terminal\",\r\n  computed: {\r\n    ...mapState({\r\n      loginInfo: (state) => state.sign.loginInfo,\r\n      signInfo: (state) => state.sign.signInfo,\r\n      findInfo: (state) => state.sign.signInfo,\r\n    }),\r\n  },\r\n  updated() {\r\n    // this.copyToken();\r\n\r\n    if(this.printToken){\r\n        this.tokenPrintIndex = this.consoleText.length -1 ; \r\n    }\r\n\r\n  },\r\n  mounted() {},\r\n  components: {},\r\n  data() {\r\n    return {\r\n      rootText: `Kanboo bash(base console) > `,\r\n      modeText: [`(base console) > `],\r\n      consoleText: [`Kanboo bash`],\r\n      enterText: [`Choose Menu 1.login 2.sign 3.find 4.clear 5.cd.. 6.cd home`],\r\n      classData: [`com`],\r\n      inputType: \"text\",\r\n      inputData: [],\r\n      inputText: \"\",\r\n      signHelp: signHelp.en,\r\n      idCheck: false,\r\n      signReg: false,\r\n      reservedWord: false,\r\n      printToken: false,\r\n      tokenText: \"\",\r\n      tokenPrintIndex: \"\",\r\n    };\r\n  },\r\n  watch: {\r\n    inputText: [\"regex\", \"isExistId\"],\r\n  },\r\n  methods: {\r\n    ...mapMutations({\r\n      login: \"sign/login\",\r\n      sign: \"sign/sign\",\r\n      find: \"sign/find\",\r\n    }),\r\n    isExistId() {\r\n      let header = null;\r\n\r\n      if (\r\n        this.inputData.length === 1 &&\r\n        this.inputText.length > 5 &&\r\n        this.inputData[0] === \"sign\"\r\n      ) {\r\n        this.axios\r\n          .post(`http://localhost:8099/access/idCheck`, header, {\r\n            params: {\r\n              memId: `${this.inputText}`,\r\n            },\r\n          })\r\n          .then((data) => {\r\n            if (data.data) {\r\n              this.idCheck = true;\r\n              this.signReg = true;\r\n            } else {\r\n              this.idCheck = false;\r\n              this.signReg = false;\r\n            }\r\n          });\r\n      }\r\n    },\r\n    enter() {\r\n      let data = this.inputText.toLowerCase();\r\n      let originalData = this.inputText;\r\n      if (data === \"clear\") {\r\n        this.consoleText = [`Kanboo bash`];\r\n        this.classData = [`com`];\r\n        switch (this.inputData[0]) {\r\n          case \"login\":\r\n            this.modeText = [`(${this.inputData[0]} console) > `];\r\n            if (this.inputData.length == 1) {\r\n              this.enterText = [`Enter your ID`];\r\n            } else if (this.inputData.length == 2) {\r\n              this.enterText = [`Enter your Password`];\r\n            }\r\n            this.addLine(`(${this.inputData[0]} console) > `, data, \"\");\r\n            return;\r\n          case \"sign\":\r\n            this.modeText = [`(${this.inputData[0]} console) > `];\r\n            this.enterText = [`${this.signHelp[this.inputData.length - 1]}`];\r\n            if (this.inputData.length == 5)\r\n              this.classData[0] = [`text-color-red`];\r\n            this.addLine(`(${this.inputData[0]} console) > `, data, \"\");\r\n            return;\r\n          case \"find\":\r\n            this.modeText = [`(${this.inputData[0]} console) > `];\r\n            this.enterText = [`Enter your Token`];\r\n            this.addLine(`(${this.inputData[0]} console) > `, data, \"\");\r\n            return;\r\n          default:\r\n            this.modeText = [`(base console) > `];\r\n            this.enterText = [\r\n              `Choose Menu 1.login 2.sign 3.find 4.clear 5.cd.. 6.cd home`,\r\n            ];\r\n            this.nothing(originalData);\r\n            return;\r\n        }\r\n      }\r\n\r\n      if (this.inputData.length > 0) {\r\n        switch (data) {\r\n          case \"cd..\":\r\n          case \"cd ..\":\r\n            this.goBack(originalData);\r\n            return;\r\n          case \"cd home\":\r\n            this.addLine(`(${this.inputData[0]} console) > `, data, \"\");\r\n            this.baseMode();\r\n            return;\r\n        }\r\n\r\n        switch (this.inputData[0]) {\r\n          case \"login\":\r\n            this.loginMode(originalData);\r\n            break;\r\n          case \"sign\":\r\n            this.signMode(originalData);\r\n            break;\r\n          case \"find\":\r\n            this.findMode(data, originalData);\r\n            break;\r\n        }\r\n      } else {\r\n        switch (data) {\r\n          case \"login\":\r\n            this.loginMode(data, originalData);\r\n            break;\r\n          case \"sign\":\r\n            this.signMode(data, originalData);\r\n            break;\r\n          case \"find\":\r\n            this.findMode(data, originalData);\r\n            break;\r\n          default:\r\n            this.nothing(originalData);\r\n            break;\r\n        }\r\n      }\r\n    },\r\n    baseMode() {\r\n      this.inputType = \"text\";\r\n      this.rootText = `Kanboo bash(base console) > `;\r\n      this.printToken = false;\r\n      this.signReg = false;\r\n      this.inputData.length = 0;\r\n    },\r\n\r\n    loginMode(data, originalData) {\r\n      if (this.inputText == \"\") return;\r\n\r\n      switch (this.inputData.length) {\r\n        case 0:\r\n          this.rootText = `Kanboo bash(login console) > `;\r\n          this.inputData.push(data);\r\n          this.addLine(`(base console) > `, originalData, \"\");\r\n          this.addLine(`(login console) > `, `Enter your ID`, `com`);\r\n          return;\r\n        case 1:\r\n          // 아이디 입력\r\n          this.form(data, \"ID\");\r\n          this.inputData.push(data);\r\n          this.addLine(`(login console) > `, `Enter your PW`, `com`);\r\n          this.inputType = \"password\";\r\n          return;\r\n        case 2:\r\n          // 비밀번호 입력\r\n          this.form(data, \"PW\");\r\n          this.inputData.push(data);\r\n          this.loginAccess();\r\n          return;\r\n      }\r\n    },\r\n\r\n    signMode(data, originalData) {\r\n      if (this.signReg) return;\r\n      switch (this.inputData.length) {\r\n        case 0: // 아이디 입력 안내문\r\n          this.rootText = `Kanboo bash(sign console) > `;\r\n          this.inputData.push(data);\r\n          this.addLine(`(base console) > `, originalData, \"\");\r\n          this.addLine(`(sign console) > `, `${this.signHelp[0]}`, `com`);\r\n          return;\r\n        case 1:\r\n          // 아이디 입력, 비밀번호 입력 안내문\r\n          this.form(data, \"ID\");\r\n          this.addLine(`(sign console) > `, `${this.signHelp[1]}`, `com`);\r\n          this.inputData.push(data);\r\n          this.inputType = \"password\";\r\n          return;\r\n        case 2:\r\n          // 비번 입력 , 비밀번호 체크 안내문\r\n          this.form(data, \"PW\");\r\n          this.addLine(`(sign console) > `, `${this.signHelp[2]}`, `com`);\r\n          this.inputData.push(data);\r\n          this.inputType = \"password\";\r\n          return;\r\n        case 3:\r\n          // 비번 확인 입력, 닉네임 입력 안내문\r\n          this.form(data, \"PWCheck\");\r\n          if (this.inputData[2] !== data) {\r\n            this.addLine(`(sign console) > `, `${this.signHelp[2]}`, `com`);\r\n            return;\r\n          }\r\n          this.addLine(`(sign console) > `, `${this.signHelp[3]}`, `com`);\r\n          this.inputData.push(data);\r\n          this.inputType = \"text\";\r\n          return;\r\n        case 4:\r\n          // 닉네임 입력, 동의 확인\r\n          this.form(data, \"nickName\");\r\n          this.inputData.push(data);\r\n          this.addLine(\r\n            `(sign console) > `,\r\n            `${this.signHelp[4]}`,\r\n            `text-color-red`\r\n          );\r\n          this.inputType = \"text\";\r\n          return;\r\n        case 5:\r\n          // 동의 확인 입력, 폰 입력 안내문\r\n          this.form(data, \"phoneChk\");\r\n          if (\"Y\" !== data && \"y\" !== data) {\r\n            this.addLine(\r\n              `(sign console) > `,\r\n              `${this.signHelp[4]}`,\r\n              `text-color-red`\r\n            );\r\n            return;\r\n          }\r\n          this.inputData.push(data);\r\n          this.addLine(`(sign console) > `, `${this.signHelp[5]}`, `com`);\r\n          return;\r\n        case 6:\r\n          // 저나번호 입력\r\n          this.form(data, \"phone\");\r\n          this.inputData.push(data);\r\n          this.signAccess();\r\n          break;\r\n      }\r\n    },\r\n    findMode(data, originalData) {\r\n      if (this.inputText == \"\") return;\r\n      switch (this.inputData.length) {\r\n        case 0:\r\n          this.rootText = `Kanboo bash(find console) > `;\r\n          this.addLine(`(base console) > `, originalData, \"\");\r\n          this.inputData.push(originalData);\r\n          this.addLine(`(find console) > `, `ID or PW ?`, `com`);\r\n          return;\r\n        case 1:\r\n          this.addLine(`(find console) > `, data, \"\");\r\n          this.inputData.push(data);\r\n          this.addLine(`(find console) > `, `Enter your Token`, `com`);\r\n          return;\r\n        case 2:\r\n          this.addLine(`(find console) > `, originalData, \"\");\r\n          this.inputData.push(data);\r\n          this.findUserInfo();\r\n      }\r\n      return;\r\n    },\r\n    form(data, position) {\r\n      switch (position) {\r\n        case \"PW\":\r\n        case \"PWCheck\":\r\n          this.addLine(\r\n            `(${this.inputData[0]} console) > `,\r\n            this.printPW(data),\r\n            \"\"\r\n          );\r\n          break;\r\n        case \"phone\":\r\n          data = `+82) ${data}`;\r\n\r\n          this.addLine(`(${this.inputData[0]} console) > `, data, \"\");\r\n          break;\r\n        default:\r\n          this.addLine(`(${this.inputData[0]} console) > `, data, \"\");\r\n          break;\r\n      }\r\n    },\r\n    nothing(data) {\r\n      // 키워드 아닐때 그냥 추가\r\n      this.addLine(`(base console) > `, data, \"\");\r\n    },\r\n    goBack(data) {\r\n      // 뒤로 가기\r\n      this.addLine(`(${this.inputData[0]} console) > `, data, \"\");\r\n      this.inputData.pop();\r\n      if (this.inputData.length === 0) {\r\n        return this.baseMode();\r\n      } else {\r\n        switch (this.inputData[0]) {\r\n          case \"login\":\r\n            switch (this.inputData.length) {\r\n              case 1:\r\n                this.addLine(\r\n                  `(${this.inputData[0]} console) > `,\r\n                  `Enter your ID`,\r\n                  `com`\r\n                );\r\n                return;\r\n              case 2:\r\n                this.addLine(\r\n                  `(${this.inputData[0]} console) > `,\r\n                  `Enter your PW`,\r\n                  `com`\r\n                );\r\n                return;\r\n              case 3:\r\n                this.addLine(\r\n                  `(${this.inputData[0]} console) > `,\r\n                  `Enter your nickName`,\r\n                  `com`\r\n                );\r\n                return;\r\n            }\r\n            return;\r\n          case \"sign\":\r\n            switch (this.inputData.length) {\r\n              case 1: // 아이디 안내문 출력\r\n                this.addLine(`(sign console) > `, `${this.signHelp[0]}`, `com`);\r\n                this.inputType = \"password\";\r\n                return;\r\n              case 2: // 비번 안내문\r\n                this.addLine(`(sign console) > `, `${this.signHelp[1]}`, `com`);\r\n                this.inputType = \"password\";\r\n                return;\r\n              case 3: // 비번 확인 안내문\r\n                this.addLine(`(sign console) > `, `${this.signHelp[1]}`, `com`);\r\n                this.inputType = \"text\";\r\n                this.inputData.pop();\r\n                return;\r\n              case 4: // nick 안내문\r\n                this.addLine(`(sign console) > `, `${this.signHelp[3]}`, `com`);\r\n                return;\r\n              case 5: // 동의 안내문\r\n                this.addLine(`(sign console) > `, `${this.signHelp[4]}`, `com`);\r\n                return;\r\n            }\r\n            return;\r\n          case \"find\":\r\n            switch (this.inputData.length) {\r\n              case 1:\r\n                this.addLine(`(find console) > `, `ID or PW ?`, `com`);\r\n                return;\r\n              case 2:\r\n                this.addLine(`(find console) > `, `Enter your Token`, `com`);\r\n                return;\r\n            }\r\n            return;\r\n        }\r\n      }\r\n    },\r\n    printPW(data) {\r\n      // 비밀번호 ***로 표시\r\n      var str = \"\";\r\n      for (let i = 0; i < data.length; i++) {\r\n        str += \"•\";\r\n      }\r\n      return str;\r\n    },\r\n    loginAccess() {\r\n      this.addLine(`(login console) > `, `Loading...`, \"com\");\r\n      let header = null;\r\n      let loginInfo = {\r\n        access: \"login\",\r\n        data: {\r\n          memId: this.inputData[1],\r\n          memPass: this.inputData[2],\r\n        },\r\n      };\r\n      header\r\n      loginInfo\r\n\r\n      // 자바 로그인 로직 작성 후 주석 해제\r\n      // this.axios\r\n      //   .post(\"http://localhost:8099/access/login\", header, {\r\n      //     params: {\r\n      //       memId: this.inputData[1],\r\n      //       memPass: this.inputData[2],\r\n      //     },\r\n      //   })\r\n      //   .then((data) => {\r\n      //     sessionStorage.setItem(\"token\", data.data);\r\n      //     if (data.data !== \"fail\") {\r\n      //       this.addLine(`(login console) > `, `success`, `com`);\r\n      //       this.login(loginInfo);\r\n      //     } else {\r\n      //       this.addLine(`(login console) > `, `Login access Fail`, `com`);\r\n      //       this.addLine(`(base console) > `, `Choose Menu`, `com`);\r\n      //     }\r\n      //   })\r\n      //   .catch(() => {\r\n      //     this.addLine(`(login console) > `, `Login access Fail`, `com`);\r\n      //     this.addLine(`(base console) > `, `Choose Menu`, `com`);\r\n      //   });\r\n      // this.baseMode();\r\n\r\n      this.$router.push(\"/projects\")\r\n\r\n    },\r\n\r\n    signAccess() {\r\n      this.addLine(`(sign console) > `, `Loading`, \"com\");\r\n\r\n      let signInfo = {\r\n        access: this.inputData[0],\r\n        data: {\r\n          memId: this.inputData[1],\r\n          memPass: this.inputData[2],\r\n          memNick: this.inputData[4],\r\n          memCelNum: this.inputData[6],\r\n        },\r\n      };\r\n\r\n\r\n      let header = null;\r\n\r\n      this.axios\r\n        .post(\"http://localhost:8099/access/sign\", header, {\r\n          params: {\r\n            memId: signInfo.data.memId,\r\n            memPass: signInfo.data.memPass,\r\n            memNick: signInfo.data.memNick,\r\n            memCelNum: signInfo.data.memCelNum,\r\n          },\r\n        })\r\n        .then((token) => {\r\n          this.printToken = true;\r\n          this.addLine(\r\n            `(sign console) > `,\r\n            `Your Token : ${token.data}`,\r\n            `com token`\r\n          );\r\n          this.tokenText = token.data;\r\n          this.sign(signInfo);\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n          this.addLine(`(sign console) > `, `Sign access Fail`, `com`);\r\n          this.addLine(`(base console) > `, `Choose Menu`, `com`);\r\n        });\r\n      this.baseMode();\r\n    },\r\n\r\n    findUserInfo() {\r\n      let url, mode;\r\n      let header = null;\r\n      let params = { memToken: this.inputData[2] };\r\n\r\n      switch (this.inputData[1]) {\r\n        case \"id\":\r\n          url = \"findId\";\r\n          mode = \"id\";\r\n          break;\r\n        case \"pw\":\r\n          url = \"resetPw\";\r\n          mode = \"pw\";\r\n          break;\r\n      }\r\n\r\n      this.axios\r\n        .post(`http://localhost:8099/access/${url}`, header, { params })\r\n        .then((data) => {\r\n          switch (mode) {\r\n            case \"id\":\r\n              this.addLine(\r\n                `(find console) > `,\r\n                `Your ID : ${data.data} `,\r\n                \"com\"\r\n              );\r\n              break;\r\n            case \"pw\":\r\n              if (data.data == true) {\r\n                this.addLine(\r\n                  `(find console) > `,\r\n                  `A temporary password has been sent via SMS.`,\r\n                  \"com\"\r\n                );\r\n              } else {\r\n                this.addLine(\r\n                  `(find console) > `,\r\n                  `You entered an Invalid Token`,\r\n                  \"com\"\r\n                );\r\n              }\r\n              break;\r\n          }\r\n        })\r\n        .catch(() => {\r\n          this.addLine(\r\n            `(find console) > `,\r\n            `You entered an Invalid Token`,\r\n            \"com\"\r\n          );\r\n        });\r\n      this.baseMode();\r\n    },\r\n\r\n    addLine(mode, enter, classdata) {\r\n      // 한줄 추가\r\n      this.consoleText.push(`Kanboo bash`);\r\n      this.modeText.push(mode);\r\n      this.enterText.push(enter);\r\n      this.classData.push(classdata);\r\n      this.inputText = \"\";\r\n    },\r\n    copyToken() {\r\n      if (this.printToken) {\r\n          navigator.clipboard.writeText(this.tokenText)\r\n        }\r\n        this.printToken = false;\r\n    },\r\n    focus() {\r\n      document.getElementById(\"inputBox\").focus();\r\n      document.getElementById(\"inputBox\").scrollIntoView();\r\n    },\r\n    regex() {\r\n      let stringReg = /^[a-z0-9]{6,20}$/;\r\n      let phoneReg = /(?:\\d{3}|\\d{4})-\\d{4}$/;\r\n      let words = [\r\n        \"login\",\r\n        \"sign\",\r\n        \"find\",\r\n        \"clear\",\r\n        \"cd..\",\r\n        \"cd ..\",\r\n        \"cd home\",\r\n      ];\r\n\r\n      if (this.inputData.length > 0 && this.inputData[0] === \"sign\") {\r\n        switch (this.inputData.length) {\r\n          case 5:\r\n            stringReg = false;\r\n            break;\r\n          case 6:\r\n            this.signReg = !phoneReg.test(this.inputText);\r\n            break;\r\n          default:\r\n            this.signReg = !stringReg.test(this.inputText);\r\n            break;\r\n        }\r\n      }\r\n\r\n      let target = this.inputText.toLowerCase();\r\n\r\n      for (let word of words) {\r\n        if (word === target) {\r\n          this.inputType = \"text\";\r\n          this.reservedWord = true;\r\n          break;\r\n        } else {\r\n          this.reservedWord = false;\r\n          if (\r\n            (this.inputData.length === 2 || this.inputData.length === 3) &&\r\n            this.inputData[0] !== \"find\"\r\n          ) {\r\n            this.inputType = \"password\";\r\n          }\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@font-face {\r\n  font-family: \"NeoDunggeunmo\";\r\n  src: url(\"https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2001@1.3/NeoDunggeunmo.woff\")\r\n    format(\"woff\");\r\n  font-weight: normal;\r\n  font-style: normal;\r\n}\r\n\r\n* {\r\n  font-family: \"NeoDunggeunmo\";\r\n  font-size: 22px;\r\n}\r\n\r\n.terminal-container {\r\n  height: calc(100vh - 70px);\r\n}\r\n\r\n.console {\r\n  color: #00ab26;\r\n  height: 100%;\r\n  padding: 20px;\r\n}\r\n\r\ninput {\r\n  width: 33%;\r\n  outline: none;\r\n  border: none;\r\n  color: #fff;\r\n  background: #16161a;\r\n}\r\n\r\n.user-text {\r\n  color: #fff;\r\n}\r\n\r\n.console-text {\r\n  color: #00ab26;\r\n}\r\n\r\n.com {\r\n  color: #00ab26;\r\n}\r\n\r\n.text-color-red {\r\n  color: red;\r\n}\r\n.text-color-orange {\r\n  color: darkorange;\r\n}\r\n\r\n.icons {\r\n  margin-top: 5px;\r\n  width: 20px;\r\n  vertical-align: sub;\r\n  display: inline-block;\r\n}\r\n\r\n.copy {\r\n  cursor: pointer;\r\n}\r\n</style>"]}]}