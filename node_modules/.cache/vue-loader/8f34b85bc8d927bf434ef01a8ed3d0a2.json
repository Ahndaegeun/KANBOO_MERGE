{"remainingRequest":"C:\\workspace\\kanboo_merge\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\workspace\\kanboo_merge\\src\\components\\component\\acess\\projectDetail\\ganttChart\\Chart.vue?vue&type=template&id=35af734c&scoped=true","dependencies":[{"path":"C:\\workspace\\kanboo_merge\\src\\components\\component\\acess\\projectDetail\\ganttChart\\Chart.vue","mtime":1639211269764},{"path":"C:\\workspace\\kanboo_merge\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639120959877},{"path":"C:\\workspace\\kanboo_merge\\node_modules\\babel-loader\\lib\\index.js","mtime":1639120954903},{"path":"C:\\workspace\\kanboo_merge\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1639121207020},{"path":"C:\\workspace\\kanboo_merge\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639120959877},{"path":"C:\\workspace\\kanboo_merge\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1639121206860}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBjbGFzcz0iY2hhcnQtY29udGFpbmVyIj4KICAgIDx1bCBjbGFzcz0iY2hhcnQtZGF0ZSI+CiAgICAgIDxsaSB2LWZvcj0iZGF5IGluIGRhdGUiIDprZXk9ImRheSI+CiAgICAgICAge3sgZGF5IH19CiAgICAgIDwvbGk+CiAgICA8L3VsPgogICAgPHVsIGNsYXNzPSJjaGFydC1iYXJzIj4KICAgICAgPGxpIHYtZm9yPSJ0YXNrIGluIGdhbnR0RGF0YS50YXNrcyIgOmtleT0idGFzayI+CiAgICAgICAgPHNwYW4KICAgICAgICAgIDpzdHlsZT0iewogICAgICAgICAgICBiYWNrZ3JvdW5kOgogICAgICAgICAgICAgIGBsaW5lYXItZ3JhZGllbnRgICsKICAgICAgICAgICAgICAnKCcgKwogICAgICAgICAgICAgICc5MGRlZycgKwogICAgICAgICAgICAgICcsJyArCiAgICAgICAgICAgICAgYCR7dGFzay5jb2xvcn0gMGAgKwogICAgICAgICAgICAgICcsJyArCiAgICAgICAgICAgICAgYCAjZmZmICR7dGFzay5wcm9ncmVzc30lYCArCiAgICAgICAgICAgICAgJyknLAogICAgICAgICAgfSIKICAgICAgICA+CiAgICAgICAgPC9zcGFuPgogICAgICAgIDxwPnt7IHRhc2sudGl0bGUgfX08L3A+CiAgICAgIDwvbGk+CiAgICA8L3VsPgogICAgPGRpdiBjbGFzcz0idG9kYXlMaW5lIiA6c3R5bGU9InsgbGVmdCA6IGAke3RvZGF5TGluZU9mZnNldH1weGAgfSI+PC9kaXY+CiAgPC9kaXY+Cg=="},{"version":3,"sources":["C:\\workspace\\kanboo_merge\\src\\components\\component\\acess\\projectDetail\\ganttChart\\Chart.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACpB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;MACV,CAAC,CAAC,CAAC,CAAC;IACN,CAAC,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACpB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC,CAAC;UACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;cAClB,CAAC,CAAC,EAAE;cACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;cACR,CAAC,CAAC,EAAE;cACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;cAClB,CAAC,CAAC,EAAE;cACJ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;cAC1B,CAAC,CAAC,CAAC;UACP,CAAC;QACH;QACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACN,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MACxB,CAAC,CAAC,CAAC,CAAC;IACN,CAAC,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACzE,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/workspace/kanboo_merge/src/components/component/acess/projectDetail/ganttChart/Chart.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"chart-container\">\n    <ul class=\"chart-date\">\n      <li v-for=\"day in date\" :key=\"day\">\n        {{ day }}\n      </li>\n    </ul>\n    <ul class=\"chart-bars\">\n      <li v-for=\"task in ganttData.tasks\" :key=\"task\">\n        <span\n          :style=\"{\n            background:\n              `linear-gradient` +\n              '(' +\n              '90deg' +\n              ',' +\n              `${task.color} 0` +\n              ',' +\n              ` #fff ${task.progress}%` +\n              ')',\n          }\"\n        >\n        </span>\n        <p>{{ task.title }}</p>\n      </li>\n    </ul>\n    <div class=\"todayLine\" :style=\"{ left : `${todayLineOffset}px` }\"></div>\n  </div>\n</template>\n\n<script>\nimport moment from \"moment\";\n\nexport default {\n  name: \"chart\",\n  data() {\n    return {\n      ganttData: this.$store.state.gantt.chart,\n      date: [],\n      month: \"\",\n      todayLineOffset : 0,\n    };\n  },\n  created() {\n    this.dateRender();\n  },\n  mounted() {\n    this.createChart();\n  },\n  updated(){\n    this.createChart();\n  },\n  methods: {\n    dateRender() {\n      let today = moment().format(\"YYYY-MM-DD\").split(\"-\");\n\n      let lastDay = new Date(today[0], today[1], 0).getDate();\n\n      for (let day = 1; day < lastDay + 1; day++) {\n        if (day < 10) {\n          day = `0${day}`;\n        }\n\n        this.date.push(`${day}`);\n      }\n    },\n    createChart() {\n      let today = moment().format(\"YYYY-MM-DD\").split(\"-\");\n\n      this.year = today[0];\n      this.month = today[1];\n\n      let days = document.querySelectorAll(\".chart-date li\");\n      let tasks = document.querySelectorAll(\".chart-bars li\");\n      days = Array.from(days);\n      tasks = Array.from(tasks);\n\n      let left = 0,\n        width = 0,\n        f_arr = [];\n\n      f_arr = days.filter((day) => day.textContent === today[2]);\n\n      this.todayLineOffset = f_arr[0].offsetLeft + 30;\n\n      tasks.forEach((el, index) => {\n\n        let start = this.ganttData.tasks[index].start;\n\n        f_arr = days.filter((day) => day.textContent === start);\n        left = f_arr[0].offsetLeft;\n\n        let end = this.ganttData.tasks[index].end;\n\n        f_arr = days.filter((day) => day.textContent === end);\n        width = f_arr[0].offsetLeft + f_arr[0].offsetWidth - left;\n\n        el.style.left = `${left}px`;\n        el.style.width = `${width}px`;\n\n        el.style.opacity = 1;\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.chart-container {\n  color: white;\n  height: calc(60vh - 70px);\n  border-radius: 25px;\n  background: #2C2F3B;\n  padding: 20px;\n  margin: 20px;\n  overflow-y: scroll;\n  overflow-x: hidden;\n}\n.chart-date {\n  display: flex;\n  margin: 0 0 20px 0;\n  font-weight: bold;\n  font-size: 1.2rem;\n}\n\n.chart-date li {\n  flex: 1;\n  min-width: 19px;\n  text-align: center;\n}\n\n.chart-date li:not(:last-child) {\n  position: relative;\n}\n.chart-date li:not(:last-child):before {\n  position: absolute;\n  content: \"\";\n  right: 0;\n  height: 100%;\n  border-right: 1px solid #fff;\n}\n\n.chart-bars li {\n  z-index: 5;\n  position: relative;\n  color: black;\n  margin-bottom: 15px;\n  font-size: 16px;\n  border-radius: 20px;\n  padding: 10px 20px;\n  opacity: 1;\n  height: 30px;\n  background: #eee;\n  transition: all 0.6s linear 0.2s;\n  overflow: hidden;\n  display: flex;\n  -webkit-filter: drop-shadow(0px 10px 10px rgba(10, 10, 10, 0.8));\n}\n\n.chart-bars li span {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n}\n\n.chart-bars li p {\n  position: absolute;\n  top: 15%;\n  margin-left: 15px;\n  left: 0;\n}\n\n.todayLine{\n  top : 0;\n  position: absolute;\n  height: 100%;\n  border-right: 1px solid red;\n\n}\n\n::-webkit-scrollbar {\n  width: 0px;\n}\n</style>"]}]}