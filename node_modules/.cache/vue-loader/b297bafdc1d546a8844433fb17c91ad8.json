{"remainingRequest":"C:\\Users\\PC\\Desktop\\LCK\\FinalProject\\Vue\\kanboo_team\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\PC\\Desktop\\LCK\\FinalProject\\Vue\\kanboo_team\\src\\components\\component\\acess\\projectDetail\\gitAndIssue\\Git.vue?vue&type=style&index=0&id=db85d398&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\PC\\Desktop\\LCK\\FinalProject\\Vue\\kanboo_team\\src\\components\\component\\acess\\projectDetail\\gitAndIssue\\Git.vue","mtime":1639124599256},{"path":"C:\\Users\\PC\\Desktop\\LCK\\FinalProject\\Vue\\kanboo_team\\node_modules\\css-loader\\dist\\cjs.js","mtime":1639124567931},{"path":"C:\\Users\\PC\\Desktop\\LCK\\FinalProject\\Vue\\kanboo_team\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1639124597282},{"path":"C:\\Users\\PC\\Desktop\\LCK\\FinalProject\\Vue\\kanboo_team\\node_modules\\postcss-loader\\src\\index.js","mtime":1639124584272},{"path":"C:\\Users\\PC\\Desktop\\LCK\\FinalProject\\Vue\\kanboo_team\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639124563165},{"path":"C:\\Users\\PC\\Desktop\\LCK\\FinalProject\\Vue\\kanboo_team\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1639124597265}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoubm9kZVRyZWV7DQogICAgaGVpZ2h0OiAyMHZoOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzJGM0I7DQogICAgb3ZlcmZsb3c6IHNjcm9sbDsNCiAgICAtbXMtb3ZlcmZsb3ctc3R5bGU6IG5vbmU7DQogICAgc2Nyb2xsYmFyLXdpZHRoOiBub25lOw0KfQ0KLm5vZGVUcmVlOjotd2Via2l0LXNjcm9sbGJhciB7DQogICAgZGlzcGxheTogbm9uZTsgDQp9DQoubm9kZVRyZWUgPiBoMXsNCiAgICBwYWRkaW5nLWJvdHRvbTogNXB4Ow0KfQ0KLnJlcG9Db250ZW50ew0KICAgIGNvbG9yOiAjZWVlOw0KfQ0KDQoudHJlZS1yb3ctaXRlbXsNCiAgICBwYWRkaW5nOiAwOw0KfQ0KLnRyZWUtbGlzdHsNCiAgICBnYXAgOiA1cHg7DQp9DQo="},{"version":3,"sources":["C:\\Users\\PC\\Desktop\\LCK\\FinalProject\\Vue\\kanboo_team\\src\\components\\component\\acess\\projectDetail\\gitAndIssue\\Git.vue"],"names":[],"mappings":";AAqIA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACzB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACjB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACvB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACR,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACf;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AACd;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACN,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AACb","file":"C:/Users/PC/Desktop/LCK/FinalProject/Vue/kanboo_team/src/components/component/acess/projectDetail/gitAndIssue/Git.vue","sourceRoot":"","sourcesContent":["<template>\r\n    <div class=\"Repo\">\r\n        <h1>Project Repository</h1>\r\n        <div class=\"nodeTree\">\r\n            <h1>Document List</h1>\r\n            <div class=\"repoContent\">\r\n                <Tree \r\n                :search-text=\"searchText\"\r\n                :use-icon=\"true\"\r\n                @nodeExpanded=\"onUpdate\"\r\n                :nodes=\"data\" \r\n                />\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n \r\n<script>\r\nimport { mapMutations } from 'vuex'\r\nimport { mapActions } from 'vuex'\r\nimport { ref } from 'vue';\r\nimport Tree from 'vue3-tree'\r\nimport \"vue3-tree/dist/style.css\";\r\n\r\nconst key = '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';\r\n\r\nexport default {\r\n    components : {\r\n        Tree,\r\n    },\r\n    data() {\r\n        return {\r\n            data : ref([]),\r\n            searchText : ref(''),\r\n            encodedData : '',\r\n        }\r\n    },\r\n    methods: {\r\n        ...mapMutations({\r\n            setDecodeData : 'git/setDecodeData',\r\n            setSelectedFileName : 'git/setSelectedFileName',\r\n        }),\r\n        ...mapActions({\r\n            getRepoList : 'git/getRepoList',\r\n        }),\r\n        \r\n        onUpdate(e) {\r\n            if(e.type === 'file'){\r\n                this.sendContent(e)\r\n                return\r\n            }\r\n            this.axios.get(`${e.url}`, {\r\n                    headers : {\r\n                        Authorization : `token ${key}`\r\n                    }\r\n            })\r\n            .then( res => {\r\n                for(let i of res.data){\r\n                    const a = {\r\n                        idx : i.sha,\r\n                        label : i.name,\r\n                        type : i.type,\r\n                        url : i.url,\r\n                        nodes : [],\r\n                        content : null,\r\n                    }\r\n                    if(i.type === 'file'){\r\n                        a.nodes = null\r\n                        a.content = i.content\r\n                    }\r\n\r\n                    e.nodes.push(a)\r\n                }\r\n            })\r\n        },\r\n\r\n        sendContent(e){\r\n                this.axios.get(`${e.url}`, {\r\n                        headers : {\r\n                            Authorization : `token ${key}`\r\n                        }\r\n                })\r\n                .then( res => {\r\n                    this.encodedData = res.data.content\r\n                    this.decodeData()\r\n                    this.setSelectedFileName(res.data.name)\r\n                })\r\n        },\r\n\r\n        getFileList() {\r\n            this.axios.get('https://api.github.com/repos/Juwon-Yun/kanboo_my_work/contents', {\r\n                    headers : {\r\n                        Authorization : `token ${key}`\r\n                    }\r\n                })\r\n            .then( res =>{\r\n                for(let i of res.data){\r\n\r\n                    // 403 error 방지 \r\n                    if(i.name === 'package-lock.json' ){\r\n                        continue\r\n                    }\r\n\r\n                    const array = {\r\n                        idx : i.sha,\r\n                        label : i.name,\r\n                        type : i.type,\r\n                        url : i.url,\r\n                        nodes : [],\r\n                        content : null,\r\n                    }\r\n                    if(i.type === 'file'){\r\n                        array.nodes = null\r\n                        array.content = i.content\r\n                    }\r\n                    this.data.push(array)\r\n                }// for i of\r\n            })\r\n        },\r\n\r\n        decodeData(){\r\n            this.setDecodeData( decodeURIComponent(escape(window.atob(this.encodedData)))) \r\n        },\r\n    },\r\n    \r\n    mounted() {\r\n        this.getFileList();\r\n    },\r\n}\r\n\r\n</script>\r\n \r\n<style scoped>\r\n.nodeTree{\r\n    height: 20vh;\r\n    background-color: #2C2F3B;\r\n    overflow: scroll;\r\n    -ms-overflow-style: none;\r\n    scrollbar-width: none;\r\n}\r\n.nodeTree::-webkit-scrollbar {\r\n    display: none; \r\n}\r\n.nodeTree > h1{\r\n    padding-bottom: 5px;\r\n}\r\n.repoContent{\r\n    color: #eee;\r\n}\r\n\r\n.tree-row-item{\r\n    padding: 0;\r\n}\r\n.tree-list{\r\n    gap : 5px;\r\n}\r\n</style>"]}]}