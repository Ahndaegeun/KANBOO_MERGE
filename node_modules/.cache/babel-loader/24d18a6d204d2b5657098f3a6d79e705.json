{"remainingRequest":"C:\\workspace\\kanboo_merge\\node_modules\\babel-loader\\lib\\index.js!C:\\workspace\\kanboo_merge\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\workspace\\kanboo_merge\\src\\store\\modules\\noAccess\\community.js","dependencies":[{"path":"C:\\workspace\\kanboo_merge\\src\\store\\modules\\noAccess\\community.js","mtime":1639121222900},{"path":"C:\\workspace\\kanboo_merge\\babel.config.js","mtime":1639120848893},{"path":"C:\\workspace\\kanboo_merge\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639120959877},{"path":"C:\\workspace\\kanboo_merge\\node_modules\\babel-loader\\lib\\index.js","mtime":1639120954903},{"path":"C:\\workspace\\kanboo_merge\\node_modules\\eslint-loader\\index.js","mtime":1639121032702}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/workspace/kanboo_merge/src/store/modules/noAccess/community.js"],"names":["axios","community","namespaced","state","boardList","numberOfArticle","articlesOnView","content","updateCheck","mutations","pushToBoardList","payload","isModify","push","setNumberOfArticle","setArticlesOnView","length","addingToArticlesOnView","pushToComment","item","_board","댓글","댓글수","_comment","commentsOnView","changeIsOpen","열렸니","changeIsUpdate","수정했니","addingToCommentList","board","commentList","changeCommentsIsOpen","isOpen","changeCommentsIsUpdate","isUpdate","changeIsFinish","isFinish","changeIsModify","changeBoardIsModify","changeUpdateCheck","actions","getBoardList","context","get","then","e","data","commit","getBoardNum","articleNum","getMoreList","getComments","console","log","obj","extraComments"],"mappings":"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","sourcesContent":["//import { createStore } from 'vuex'\nimport axios from 'axios'\n\nconst community = {\n  namespaced: true,\n\n  state: {\n    boardList : [],\n    numberOfArticle : 0,\n    articlesOnView : 0,\n    content : '',\n    updateCheck : false,\n  },\n  \n  mutations: {\n    pushToBoardList(state, payload){\n      payload[\"열렸니\"] = false\n      payload[\"수정했니\"] = false\n      payload.isModify = true\n      state.boardList.push(payload)\n    },\n\n    setNumberOfArticle(state, payload){\n      state.numberOfArticle = payload\n    },\n\n    setArticlesOnView(state){\n      state.articlesOnView = state.boardList.length\n    },\n\n    addingToArticlesOnView(state, payload) {\n      state.articlesOnView += payload\n    },\n\n    pushToComment(state, item) {\n      if(item._board.댓글.length !== 0 || item._board.댓글수 === 0){\n        return\n      }\n\n      item._board.댓글.push(...item._comment)\n      item._board.commentsOnView = item._comment.length;\n    },\n\n    //---------------게시글 관련 ------------------\n    changeIsOpen(state, payload){\n      payload.열렸니 = !payload.열렸니\n      state\n    },\n    changeIsUpdate(state, payload){\n      payload.수정했니 = !payload.수정했니\n      state\n    },\n    //--------------------------------------------\n\n    // 해당 게시물 댓글 리스트에 댓글 추가\n    addingToCommentList(state, payload) {\n      state\n      payload.board.댓글.push(...payload.commentList)\n    },\n    //----------------댓글 관련!!!-------------------\n    changeCommentsIsOpen(state, payload){\n      payload.isOpen = !payload.isOpen\n      state\n    },\n    changeCommentsIsUpdate(state, payload){\n      payload.isUpdate = !payload.isUpdate\n      state\n    },\n    changeIsFinish(state, payload){\n      payload.isFinish = !payload.isFinish\n      state\n    },\n    changeIsModify(state, payload){\n      payload.isModify = !payload.isModify\n      state\n    },\n    //-------------------------------------------\n    changeBoardIsModify(state, payload){\n      payload.isModify = !payload.isModify\n      state\n    },\n    changeUpdateCheck(state){\n      state.updateCheck = !state.updateCheck\n    },\n  },\n  \n  actions: {\n    //articleOnView state에 ?\n    getBoardList(context){\n      axios.get('/BoardList.json')\n                .then(e => {\n                  for(let item of e.data){\n                    context.commit('pushToBoardList', item)\n                  } \n                  context.commit('setArticlesOnView')\n                })\n    },\n    getBoardNum(context){\n      axios.get('/articleNum.json')\n                .then(e => {\n                context.commit('setNumberOfArticle', e.data.articleNum)\n                })\n    },\n    //원래는 이 부분에서 현재보여지는 게시글의 개수인 articleOnView를 같이 넘김\n    //Controller에서 보여지는 개시글의 개수를 받아서 jpa문법으로 페이징처리를 위함\n    //params : {articleNum : this.articleOnView}\n    getMoreList(context){\n      axios.get('/BoardList.json')\n                .then(e => {\n                  for(let item of e.data){\n                    context.commit('pushToBoardList', item)\n                  }\n                  context.commit('setArticlesOnView')\n                  // context.articlesOnView += e.data.length\n                })\n    },\n\n    //컨트롤러에서 Comment찾아서 { params : {idx : item.idx, number : this.commentsOnView }}\n    //commentsOnView는 여기서 params로 0을 넘겨줌\n    //context.state.commentsOnView 이렇게 매개변수  넘겨줌\n    getComments(context, item) {\n      axios.get('/BoardComment.json').then(e => {\n        context.commit('changeIsOpen', item)\n        \n        for(let item of e.data){\n          item.isOpen = false\n          item.isUpdate = false\n          item.isFinish = false\n          item.isModify = true\n        }\n        console.log(e.data)\n        const obj = {\n          //해당 게시글 object\n          _board: item,\n          //ex) 댓글 5개 씩 가져옴 ..\n          _comment: e.data\n        }\n        context.commit('pushToComment', obj)\n      })\n    },\n\n    extraComments(context, item) {\n      //엑시오스 호출\n      //이 부분에에서 { params : { idx : item.idx, number : this.commentsOnView}}넘겨줌.. 12개\n      axios.get('/BoardComment.json').then(e => {\n        for(let item of e.data){\n          item.isOpen = false\n          item.isUpdate = false\n          item.isFinish = false\n          item.isModify = true\n        }\n        item.commentsOnView += e.data.length;\n        const payload = {\n          board: item,\n          commentList : e.data\n        }\n        //가져온 데이터 뮤테이션으로 바꿔주기\n        context.commit('addingToCommentList', payload)\n      })\n    }\n  }\n}\n\nexport default community"]}]}