{"remainingRequest":"C:\\Users\\PC\\Desktop\\LCK\\FinalProject\\Vue\\kanboo_team\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\PC\\Desktop\\LCK\\FinalProject\\Vue\\kanboo_team\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\PC\\Desktop\\LCK\\FinalProject\\Vue\\kanboo_team\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\PC\\Desktop\\LCK\\FinalProject\\Vue\\kanboo_team\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\PC\\Desktop\\LCK\\FinalProject\\Vue\\kanboo_team\\src\\components\\component\\acess\\projectDetail\\gitAndIssue\\Git.vue?vue&type=template&id=db85d398&scoped=true","dependencies":[{"path":"C:\\Users\\PC\\Desktop\\LCK\\FinalProject\\Vue\\kanboo_team\\src\\components\\component\\acess\\projectDetail\\gitAndIssue\\Git.vue","mtime":1639124599256},{"path":"C:\\Users\\PC\\Desktop\\LCK\\FinalProject\\Vue\\kanboo_team\\babel.config.js","mtime":1639124543605},{"path":"C:\\Users\\PC\\Desktop\\LCK\\FinalProject\\Vue\\kanboo_team\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639124563165},{"path":"C:\\Users\\PC\\Desktop\\LCK\\FinalProject\\Vue\\kanboo_team\\node_modules\\babel-loader\\lib\\index.js","mtime":1639124562553},{"path":"C:\\Users\\PC\\Desktop\\LCK\\FinalProject\\Vue\\kanboo_team\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1639124597285},{"path":"C:\\Users\\PC\\Desktop\\LCK\\FinalProject\\Vue\\kanboo_team\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639124563165},{"path":"C:\\Users\\PC\\Desktop\\LCK\\FinalProject\\Vue\\kanboo_team\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1639124597265}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIHJlc29sdmVDb21wb25lbnQgYXMgX3Jlc29sdmVDb21wb25lbnQsIGNyZWF0ZVZOb2RlIGFzIF9jcmVhdGVWTm9kZSwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrLCBwdXNoU2NvcGVJZCBhcyBfcHVzaFNjb3BlSWQsIHBvcFNjb3BlSWQgYXMgX3BvcFNjb3BlSWQgfSBmcm9tICJ2dWUiOwoKdmFyIF93aXRoU2NvcGVJZCA9IGZ1bmN0aW9uIF93aXRoU2NvcGVJZChuKSB7CiAgcmV0dXJuIF9wdXNoU2NvcGVJZCgiZGF0YS12LWRiODVkMzk4IiksIG4gPSBuKCksIF9wb3BTY29wZUlkKCksIG47Cn07Cgp2YXIgX2hvaXN0ZWRfMSA9IHsKICBjbGFzczogIlJlcG8iCn07Cgp2YXIgX2hvaXN0ZWRfMiA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoZnVuY3Rpb24gKCkgewogIHJldHVybiAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaDEiLCBudWxsLCAiUHJvamVjdCBSZXBvc2l0b3J5IiwgLTEKICAvKiBIT0lTVEVEICovCiAgKTsKfSk7Cgp2YXIgX2hvaXN0ZWRfMyA9IHsKICBjbGFzczogIm5vZGVUcmVlIgp9OwoKdmFyIF9ob2lzdGVkXzQgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKGZ1bmN0aW9uICgpIHsKICByZXR1cm4gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImgxIiwgbnVsbCwgIkRvY3VtZW50IExpc3QiLCAtMQogIC8qIEhPSVNURUQgKi8KICApOwp9KTsKCnZhciBfaG9pc3RlZF81ID0gewogIGNsYXNzOiAicmVwb0NvbnRlbnQiCn07CmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgdmFyIF9jb21wb25lbnRfVHJlZSA9IF9yZXNvbHZlQ29tcG9uZW50KCJUcmVlIik7CgogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzEsIFtfaG9pc3RlZF8yLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8zLCBbX2hvaXN0ZWRfNCwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfNSwgW19jcmVhdGVWTm9kZShfY29tcG9uZW50X1RyZWUsIHsKICAgICJzZWFyY2gtdGV4dCI6ICRkYXRhLnNlYXJjaFRleHQsCiAgICAidXNlLWljb24iOiB0cnVlLAogICAgb25Ob2RlRXhwYW5kZWQ6ICRvcHRpb25zLm9uVXBkYXRlLAogICAgbm9kZXM6ICRkYXRhLmRhdGEKICB9LCBudWxsLCA4CiAgLyogUFJPUFMgKi8KICAsIFsic2VhcmNoLXRleHQiLCAib25Ob2RlRXhwYW5kZWQiLCAibm9kZXMiXSldKV0pXSk7Cn0="},{"version":3,"sources":["C:\\Users\\PC\\Desktop\\LCK\\FinalProject\\Vue\\kanboo_team\\src\\components\\component\\acess\\projectDetail\\gitAndIssue\\Git.vue"],"names":[],"mappings":";;;;;;;AACS,EAAA,KAAK,EAAC;;;;sBACP,mBAAA,CAA2B,IAA3B,EAA2B,IAA3B,EAAI,oBAAJ,EAAsB,CAAA;AAAA;AAAtB,G;;;;AACK,EAAA,KAAK,EAAC;;;;sBACP,mBAAA,CAAsB,IAAtB,EAAsB,IAAtB,EAAI,eAAJ,EAAiB,CAAA;AAAA;AAAjB,G;;;;AACK,EAAA,KAAK,EAAC;;;;;uBAJnB,mBAAA,CAaM,KAbN,EAAA,UAAA,EAaM,CAZF,UAYE,EAXF,mBAAA,CAUM,KAVN,EAAA,UAAA,EAUM,CATF,UASE,EARF,mBAAA,CAOM,KAPN,EAAA,UAAA,EAOM,CANF,YAAA,CAKE,eALF,EAKE;AAJD,mBAAa,KAAA,CAAA,UAIZ;AAHD,gBAAU,IAGT;AAFD,IAAA,cAAY,EAAE,QAAA,CAAA,QAEb;AADD,IAAA,KAAK,EAAE,KAAA,CAAA;AACN,GALF,E,IAAA,E;;AAAA,I,0CAAA,CAME,CAPN,CAQE,CAVN,CAWE,CAbN,C","sourcesContent":["<template>\r\n    <div class=\"Repo\">\r\n        <h1>Project Repository</h1>\r\n        <div class=\"nodeTree\">\r\n            <h1>Document List</h1>\r\n            <div class=\"repoContent\">\r\n                <Tree \r\n                :search-text=\"searchText\"\r\n                :use-icon=\"true\"\r\n                @nodeExpanded=\"onUpdate\"\r\n                :nodes=\"data\" \r\n                />\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n \r\n<script>\r\nimport { mapMutations } from 'vuex'\r\nimport { mapActions } from 'vuex'\r\nimport { ref } from 'vue';\r\nimport Tree from 'vue3-tree'\r\nimport \"vue3-tree/dist/style.css\";\r\n\r\nconst key = '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';\r\n\r\nexport default {\r\n    components : {\r\n        Tree,\r\n    },\r\n    data() {\r\n        return {\r\n            data : ref([]),\r\n            searchText : ref(''),\r\n            encodedData : '',\r\n        }\r\n    },\r\n    methods: {\r\n        ...mapMutations({\r\n            setDecodeData : 'git/setDecodeData',\r\n            setSelectedFileName : 'git/setSelectedFileName',\r\n        }),\r\n        ...mapActions({\r\n            getRepoList : 'git/getRepoList',\r\n        }),\r\n        \r\n        onUpdate(e) {\r\n            if(e.type === 'file'){\r\n                this.sendContent(e)\r\n                return\r\n            }\r\n            this.axios.get(`${e.url}`, {\r\n                    headers : {\r\n                        Authorization : `token ${key}`\r\n                    }\r\n            })\r\n            .then( res => {\r\n                for(let i of res.data){\r\n                    const a = {\r\n                        idx : i.sha,\r\n                        label : i.name,\r\n                        type : i.type,\r\n                        url : i.url,\r\n                        nodes : [],\r\n                        content : null,\r\n                    }\r\n                    if(i.type === 'file'){\r\n                        a.nodes = null\r\n                        a.content = i.content\r\n                    }\r\n\r\n                    e.nodes.push(a)\r\n                }\r\n            })\r\n        },\r\n\r\n        sendContent(e){\r\n                this.axios.get(`${e.url}`, {\r\n                        headers : {\r\n                            Authorization : `token ${key}`\r\n                        }\r\n                })\r\n                .then( res => {\r\n                    this.encodedData = res.data.content\r\n                    this.decodeData()\r\n                    this.setSelectedFileName(res.data.name)\r\n                })\r\n        },\r\n\r\n        getFileList() {\r\n            this.axios.get('https://api.github.com/repos/Juwon-Yun/kanboo_my_work/contents', {\r\n                    headers : {\r\n                        Authorization : `token ${key}`\r\n                    }\r\n                })\r\n            .then( res =>{\r\n                for(let i of res.data){\r\n\r\n                    // 403 error 방지 \r\n                    if(i.name === 'package-lock.json' ){\r\n                        continue\r\n                    }\r\n\r\n                    const array = {\r\n                        idx : i.sha,\r\n                        label : i.name,\r\n                        type : i.type,\r\n                        url : i.url,\r\n                        nodes : [],\r\n                        content : null,\r\n                    }\r\n                    if(i.type === 'file'){\r\n                        array.nodes = null\r\n                        array.content = i.content\r\n                    }\r\n                    this.data.push(array)\r\n                }// for i of\r\n            })\r\n        },\r\n\r\n        decodeData(){\r\n            this.setDecodeData( decodeURIComponent(escape(window.atob(this.encodedData)))) \r\n        },\r\n    },\r\n    \r\n    mounted() {\r\n        this.getFileList();\r\n    },\r\n}\r\n\r\n</script>\r\n \r\n<style scoped>\r\n.nodeTree{\r\n    height: 20vh;\r\n    background-color: #2C2F3B;\r\n    overflow: scroll;\r\n    -ms-overflow-style: none;\r\n    scrollbar-width: none;\r\n}\r\n.nodeTree::-webkit-scrollbar {\r\n    display: none; \r\n}\r\n.nodeTree > h1{\r\n    padding-bottom: 5px;\r\n}\r\n.repoContent{\r\n    color: #eee;\r\n}\r\n\r\n.tree-row-item{\r\n    padding: 0;\r\n}\r\n.tree-list{\r\n    gap : 5px;\r\n}\r\n</style>"],"sourceRoot":""}]}